{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$hmac.js",
"lineCount":38,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,GAAkE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAM1GC,UAASA,KAAI,CAACC,IAAD,EAAOC,GAAP,EAAYC,GAAZ,CAAiB;AAC5B,QAAI,EAAE,IAAF,YAAkBH,IAAlB,CAAJ;AACE,aAAO,IAAIA,IAAJ,CAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,CAAP;AADF;AAEA,QAAKC,CAAAA,IAAL,GAAYH,IAAZ;AACA,QAAKI,CAAAA,SAAL,GAAiBJ,IAAKI,CAAAA,SAAtB,GAAkC,CAAlC;AACA,QAAKC,CAAAA,OAAL,GAAeL,IAAKK,CAAAA,OAApB,GAA8B,CAA9B;AAEA,QAAKC,CAAAA,KAAL,GADA,IAAKC,CAAAA,KACL,GADa,IACb;AAEA,QAAKC,CAAAA,KAAL,CAAWC,KAAMC,CAAAA,OAAN,CAAcT,GAAd,EAAmBC,GAAnB,CAAX,CAAA;AAT4B;AAH9B,MAAIO,QAAQb,OAAA,CAAQ,gDAAR,CAAZ,EACIe,SAASf,OAAA,CAAQ,+CAAR,CADb;AAcAC,QAAOC,CAAAA,OAAP,GAAiBC,IAAjB;AAEAA,MAAKa,CAAAA,SAAUJ,CAAAA,KAAf,GAAuBK,QAAa,CAACZ,GAAD,CAAM;AAEpCA,OAAIa,CAAAA,MAAR,GAAiB,IAAKV,CAAAA,SAAtB,KACEH,GADF,GACwBc,CAAhB,IAAI,IAAKZ,CAAAA,IAAT,EAAgBY,EAAAA,MAAhB,CAAuBd,GAAvB,CAA4Be,CAAAA,MAA5B,EADR;AAEAL,UAAA,CAAOV,GAAIa,CAAAA,MAAX,IAAqB,IAAKV,CAAAA,SAA1B,CAAA;AAGA,SAAK,IAAIa,IAAIhB,GAAIa,CAAAA,MAAjB,EAAyBG,CAAzB,GAA6B,IAAKb,CAAAA,SAAlC,EAA6Ca,CAAA,EAA7C;AACEhB,SAAIiB,CAAAA,IAAJ,CAAS,CAAT,CAAA;AADF;AAGA,SAAKD,CAAL,GAAS,CAAT,EAAYA,CAAZ,GAAgBhB,GAAIa,CAAAA,MAApB,EAA4BG,CAAA,EAA5B;AACEhB,SAAA,CAAIgB,CAAJ,CAAA,IAAU,EAAV;AADF;AAEA,QAAKV,CAAAA,KAAL,GAA6BQ,CAAhB,IAAI,IAAKZ,CAAAA,IAAT,EAAgBY,EAAAA,MAAhB,CAAuBd,GAAvB,CAAb;AAGA,SAAKgB,CAAL,GAAS,CAAT,EAAYA,CAAZ,GAAgBhB,GAAIa,CAAAA,MAApB,EAA4BG,CAAA,EAA5B;AACEhB,SAAA,CAAIgB,CAAJ,CAAA,IAAU,GAAV;AADF;AAEA,QAAKX,CAAAA,KAAL,GAA6BS,CAAhB,IAAI,IAAKZ,CAAAA,IAAT,EAAgBY,EAAAA,MAAhB,CAAuBd,GAAvB,CAAb;AAjBwC,GAA1C;AAoBAF,MAAKa,CAAAA,SAAUG,CAAAA,MAAf,GAAwBI,QAAe,CAACC,GAAD,EAAMlB,GAAN,CAAW;AAChD,QAAKK,CAAAA,KAAMQ,CAAAA,MAAX,CAAkBK,GAAlB,EAAuBlB,GAAvB,CAAA;AACA,WAAO,IAAP;AAFgD,GAAlD;AAKAH,MAAKa,CAAAA,SAAUI,CAAAA,MAAf,GAAwBK,QAAe,CAACnB,GAAD,CAAM;AAC3C,QAAKI,CAAAA,KAAMS,CAAAA,MAAX,CAAkB,IAAKR,CAAAA,KAAMS,CAAAA,MAAX,EAAlB,CAAA;AACA,WAAO,IAAKV,CAAAA,KAAMU,CAAAA,MAAX,CAAkBd,GAAlB,CAAP;AAF2C,GAA7C;AA5C0G,CAA1G;;",
"sources":["node_modules/hash_DOT_js/lib/hash/hmac.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$hmac\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hmac","hash","key","enc","Hash","blockSize","outSize","outer","inner","_init","utils","toArray","assert","prototype","Hmac.prototype._init","length","update","digest","i","push","Hmac.prototype.update","msg","Hmac.prototype.digest"]
}
