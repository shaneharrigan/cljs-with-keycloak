{
"version":3,
"file":"module$node_modules$parse_asn1$fixProc.js",
"lineCount":21,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,GAA2D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAInG,MAAIC,WAAW,uHAAf,EACIC,aAAa,6CADjB,EAEIC,YAAY,gFAFhB,EAGIC,MAAMN,OAAA,CAAQ,0CAAR,CAHV,EAIIO,UAAUP,OAAA,CAAQ,4CAAR,CAJd,EAKIQ,SAASR,OAAA,CAAQ,uCAAR,CAAuBQ,CAAAA,MALpC;AAMAP,QAAOC,CAAAA,OAAP,GAAiBO,QAAS,CAACC,IAAD,EAAOC,QAAP,CAAiB;AACtCC,QAAAA,GAAMF,IAAKG,CAAAA,QAAL,EAAND;AACJ,QAAIE,QAAQF,IAAIE,CAAAA,KAAJ,CAAUX,QAAV,CAAZ;AAEA,QAAKW,KAAL,CAGO;AACN,UAAIC,QAAQ,KAARA,GAAgBD,KAAA,CAAM,CAAN,CAApB,EACIE,KAAKR,MAAOS,CAAAA,IAAP,CAAYH,KAAA,CAAM,CAAN,CAAZ,EAAsB,KAAtB,CADT;AAEII,UAAAA,YAAaV,MAAOS,CAAAA,IAAP,CAAYH,KAAA,CAAM,CAAN,CAASK,CAAAA,OAAT,CAAiB,SAAjB,EAA4B,EAA5B,CAAZ,EAA6C,QAA7C,CAAbD;AACAE,WAAAA,GAAYd,GAAA,CAAIK,QAAJ,EAAcK,EAAGK,CAAAA,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAd,EAA8BC,QAAA,CAASR,KAAA,CAAM,CAAN,CAAT,EAAmB,EAAnB,CAA9B,CAAsDF,CAAAA,GAAlEQ;AACAG,cAAAA,GAAM,EAANA;AACAC,WAAAA,GAASjB,OAAQkB,CAAAA,gBAAR,CAAyBV,KAAzB,EAAgCK,KAAhC,EAA2CJ,EAA3C,CAATQ;AACJD,cAAIG,CAAAA,IAAJ,CAASF,KAAOG,CAAAA,MAAP,CAAcT,SAAd,CAAT,CAAA;AACAK,cAAIG,CAAAA,IAAJ,CAASF,KAAA,CAAO,OAAP,CAAA,EAAT,CAAA;AACAI,eAAA,GAAYpB,MAAOqB,CAAAA,MAAP,CAAcN,QAAd,CAAZ;AATM,KAHP;AACKO,eACJ,GADalB,IAAIE,CAAAA,KAAJ,CAAUT,SAAV,CACb,EAAAuB,SAAA,GAAYpB,MAAOS,CAAAA,IAAP,CAAYa,SAAA,CAAO,CAAP,CAAUX,CAAAA,OAAV,CAAkB,SAAlB,EAA6B,EAA7B,CAAZ,EAA8C,QAA9C,CAAZ;AAFD;AAeA,WAAO,CACNY,IAFSnB,IAAIE,CAAAA,KAAJ,CAAUV,UAAV,CAAA2B,CAAsB,CAAtBA,CACH,EAENC,KAAMJ,SAFA,CAAP;AAnB0C,GAA3C;AAVmG,CAAnG;;",
"sources":["node_modules/parse-asn1/fixProc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$parse_asn1$fixProc\"] = function(global,require,module,exports) {\n'use strict';\n\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m;\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m;\nvar evp = require('evp_bytestokey');\nvar ciphers = require('browserify-aes');\nvar Buffer = require('safe-buffer').Buffer;\nmodule.exports = function (okey, password) {\n\tvar key = okey.toString();\n\tvar match = key.match(findProc);\n\tvar decrypted;\n\tif (!match) {\n\t\tvar match2 = key.match(fullRegex);\n\t\tdecrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64');\n\t} else {\n\t\tvar suite = 'aes' + match[1];\n\t\tvar iv = Buffer.from(match[2], 'hex');\n\t\tvar cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64');\n\t\tvar cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;\n\t\tvar out = [];\n\t\tvar cipher = ciphers.createDecipheriv(suite, cipherKey, iv);\n\t\tout.push(cipher.update(cipherText));\n\t\tout.push(cipher['final']());\n\t\tdecrypted = Buffer.concat(out);\n\t}\n\tvar tag = key.match(startRegex)[1];\n\treturn {\n\t\ttag: tag,\n\t\tdata: decrypted\n\t};\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","findProc","startRegex","fullRegex","evp","ciphers","Buffer","module.exports","okey","password","key","toString","match","suite","iv","from","cipherText","replace","cipherKey","slice","parseInt","out","cipher","createDecipheriv","push","update","decrypted","concat","match2","tag","data"]
}
