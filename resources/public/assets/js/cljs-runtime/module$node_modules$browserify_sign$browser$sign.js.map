{
"version":3,
"file":"module$node_modules$browserify_sign$browser$sign.js",
"lineCount":104,
"mappings":"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",
"sources":["node_modules/browserify-sign/browser/sign.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_sign$browser$sign\"] = function(global,require,module,exports) {\n'use strict';\n\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer;\nvar createHmac = require('create-hmac');\nvar crt = require('browserify-rsa');\nvar EC = require('elliptic').ec;\nvar BN = require('bn.js');\nvar parseKeys = require('parse-asn1');\nvar curves = require('./curves.json');\n\nvar RSA_PKCS1_PADDING = 1;\n\nfunction sign(hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key);\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n    return ecSign(hash, priv);\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') { throw new Error('wrong private key type'); }\n    return dsaSign(hash, priv, hashType);\n  }\n  if (signType !== 'rsa' && signType !== 'ecdsa/rsa') { throw new Error('wrong private key type'); }\n  if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) { throw new Error('illegal or unsupported padding mode'); }\n\n  hash = Buffer.concat([tag, hash]);\n  var len = priv.modulus.byteLength();\n  var pad = [0, 1];\n  while (hash.length + pad.length + 1 < len) { pad.push(0xff); }\n  pad.push(0x00);\n  var i = -1;\n  while (++i < hash.length) { pad.push(hash[i]); }\n\n  var out = crt(pad, priv);\n  return out;\n}\n\nfunction ecSign(hash, priv) {\n  var curveId = curves[priv.curve.join('.')];\n  if (!curveId) { throw new Error('unknown curve ' + priv.curve.join('.')); }\n\n  var curve = new EC(curveId);\n  var key = curve.keyFromPrivate(priv.privateKey);\n  var out = key.sign(hash);\n\n  return Buffer.from(out.toDER());\n}\n\nfunction dsaSign(hash, priv, algo) {\n  var x = priv.params.priv_key;\n  var p = priv.params.p;\n  var q = priv.params.q;\n  var g = priv.params.g;\n  var r = new BN(0);\n  var k;\n  var H = bits2int(hash, q).mod(q);\n  var s = false;\n  var kv = getKey(x, q, hash, algo);\n  while (s === false) {\n    k = makeKey(q, kv, algo);\n    r = makeR(g, k, p, q);\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n    if (s.cmpn(0) === 0) {\n      s = false;\n      r = new BN(0);\n    }\n  }\n  return toDER(r, s);\n}\n\nfunction toDER(r, s) {\n  r = r.toArray();\n  s = s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) { r = [0].concat(r); }\n  if (s[0] & 0x80) { s = [0].concat(s); }\n\n  var total = r.length + s.length + 4;\n  var res = [\n    0x30, total, 0x02, r.length\n  ];\n  res = res.concat(r, [0x02, s.length], s);\n  return Buffer.from(res);\n}\n\nfunction getKey(x, q, hash, algo) {\n  x = Buffer.from(x.toArray());\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length);\n    x = Buffer.concat([zeros, x]);\n  }\n  var hlen = hash.length;\n  var hbits = bits2octets(hash, q);\n  var v = Buffer.alloc(hlen);\n  v.fill(1);\n  var k = Buffer.alloc(hlen);\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest();\n  v = createHmac(algo, k).update(v).digest();\n  return { k: k, v: v };\n}\n\nfunction bits2int(obits, q) {\n  var bits = new BN(obits);\n  var shift = (obits.length << 3) - q.bitLength();\n  if (shift > 0) { bits.ishrn(shift); }\n  return bits;\n}\n\nfunction bits2octets(bits, q) {\n  bits = bits2int(bits, q);\n  bits = bits.mod(q);\n  var out = Buffer.from(bits.toArray());\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length);\n    out = Buffer.concat([zeros, out]);\n  }\n  return out;\n}\n\nfunction makeKey(q, kv, algo) {\n  var t;\n  var k;\n\n  do {\n    t = Buffer.alloc(0);\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n      t = Buffer.concat([t, kv.v]);\n    }\n\n    k = bits2int(t, q);\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest();\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest();\n  } while (k.cmp(q) !== -1);\n\n  return k;\n}\n\nfunction makeR(g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);\n}\n\nmodule.exports = sign;\nmodule.exports.getKey = getKey;\nmodule.exports.makeKey = makeKey;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getKey","x","q","hash","algo","Buffer","from","toArray","length","byteLength","zeros","alloc","concat","hlen","bits","bits2int","mod","out","v","fill","k","createHmac","update","hbits","digest","obits","BN","shift","bitLength","ishrn","makeKey","kv","t","cmp","crt","EC","ec","parseKeys","curves","sign","key","hashType","signType","tag","priv","curve","Error","curveId","join","keyFromPrivate","privateKey","toDER","type","params","priv_key","p","g","r","H","s","toRed","mont","redPow","fromRed","invm","imul","add","mul","cmpn","res","undefined","padding","RSA_PKCS1_PADDING","len","modulus","pad","push","i"]
}
