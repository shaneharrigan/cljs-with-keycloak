shadow$provide.module$node_modules$readable_stream$lib$internal$streams$destroy = function(global, require, module, exports) {
  function emitErrorNT(self, err) {
    self.emit("error", err);
  }
  var pna = require("module$node_modules$process_nextick_args$index");
  module.exports = {destroy:function(err, cb) {
    var _this = this, writableDestroyed = this._writableState && this._writableState.destroyed;
    if (this._readableState && this._readableState.destroyed || writableDestroyed) {
      return cb ? cb(err) : err && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, pna.nextTick(emitErrorNT, this, err)) : pna.nextTick(emitErrorNT, this, err)), this;
    }
    this._readableState && (this._readableState.destroyed = !0);
    this._writableState && (this._writableState.destroyed = !0);
    this._destroy(err || null, function(err) {
      !cb && err ? _this._writableState ? _this._writableState.errorEmitted || (_this._writableState.errorEmitted = !0, pna.nextTick(emitErrorNT, _this, err)) : pna.nextTick(emitErrorNT, _this, err) : cb && cb(err);
    });
    return this;
  }, undestroy:function() {
    this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1);
    this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
  }};
};

//# sourceMappingURL=module$node_modules$readable_stream$lib$internal$streams$destroy.js.map
