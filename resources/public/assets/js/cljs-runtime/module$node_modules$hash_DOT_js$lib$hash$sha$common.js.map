{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$sha$common.js",
"lineCount":37,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,GAAwE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAqBhHC,UAASA,MAAK,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAU;AACtB,WAAQF,CAAR,GAAYC,CAAZ,GAAkBD,CAAlB,GAAsBE,CAAtB,GAA4BD,CAA5B,GAAgCC,CAAhC;AADsB;AAjBxB,MAAIC,SADQP,OAAAQ,CAAQ,gDAARA,CACOD,CAAAA,MAAnB;AAUAL,SAAQO,CAAAA,IAAR,GARAA,QAAa,CAACC,CAAD,EAAIN,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAa;AACxB,QAAU,CAAV,KAAII,CAAJ;AACE,aAAYN,CAAZ,GAAeC,CAAf,GASiB,CATLD,CAAZ,GAAkBE,CAAlB;AADF;AAEA,QAAU,CAAV,KAAII,CAAJ,IAAqB,CAArB,KAAeA,CAAf;AACE,aAAWN,CAAX,GAAcC,CAAd,GAAiBC,CAAjB;AADF;AAEA,QAAU,CAAV,KAAII,CAAJ;AACE,aAAOP,KAAA,CAAMC,CAAN,EAASC,CAAT,EAAYC,CAAZ,CAAP;AADF;AALwB,GAQ1B;AAKAJ,SAAQS,CAAAA,IAAR,GAHAA,QAAa,CAACP,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAU;AACrB,WAAQF,CAAR,GAAYC,CAAZ,GAAmB,CAACD,CAApB,GAAyBE,CAAzB;AADqB,GAGvB;AAKAJ,SAAQC,CAAAA,KAAR,GAAgBA,KAAhB;AAKAD,SAAQU,CAAAA,GAAR,GAHAA,QAAY,CAACR,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAU;AACpB,WAAOF,CAAP,GAAWC,CAAX,GAAeC,CAAf;AADoB,GAGtB;AAKAJ,SAAQW,CAAAA,MAAR,GAHAA,QAAe,CAACT,CAAD,CAAI;AACjB,WAAOG,MAAA,CAAOH,CAAP,EAAU,CAAV,CAAP,GAAsBG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAtB,GAAsCG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAtC;AADiB,GAGnB;AAKAF,SAAQY,CAAAA,MAAR,GAHAA,QAAe,CAACV,CAAD,CAAI;AACjB,WAAOG,MAAA,CAAOH,CAAP,EAAU,CAAV,CAAP,GAAsBG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAtB,GAAsCG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAtC;AADiB,GAGnB;AAKAF,SAAQa,CAAAA,MAAR,GAHAA,QAAe,CAACX,CAAD,CAAI;AACjB,WAAOG,MAAA,CAAOH,CAAP,EAAU,CAAV,CAAP,GAAsBG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAtB,GAAuCA,CAAvC,KAA6C,CAA7C;AADiB,GAGnB;AAKAF,SAAQc,CAAAA,MAAR,GAHAA,QAAe,CAACZ,CAAD,CAAI;AACjB,WAAOG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAP,GAAuBG,MAAA,CAAOH,CAAP,EAAU,EAAV,CAAvB,GAAwCA,CAAxC,KAA8C,EAA9C;AADiB,GAGnB;AAjDgH,CAAhH;;",
"sources":["node_modules/hash_DOT_js/lib/hash/sha/common.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$sha$common\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n\n};"],
"names":["shadow$provide","global","require","module","exports","maj32","x","y","z","rotr32","utils","ft_1","s","ch32","p32","s0_256","s1_256","g0_256","g1_256"]
}
