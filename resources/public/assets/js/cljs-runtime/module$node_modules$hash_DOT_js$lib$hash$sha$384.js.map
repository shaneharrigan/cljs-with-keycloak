{
"version":3,
"file":"module$node_modules$hash_DOT_js$lib$hash$sha$384.js",
"lineCount":20,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,GAAqE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAO7GC,UAASA,OAAM,EAAG;AAChB,QAAI,EAAE,IAAF,YAAkBA,MAAlB,CAAJ;AACE,aAAO,IAAIA,MAAJ,EAAP;AADF;AAGAC,UAAOC,CAAAA,IAAP,CAAY,IAAZ,CAAA;AACA,QAAKC,CAAAA,CAAL,GAAS,CACP,UADO,EACK,UADL,EAEP,UAFO,EAEK,SAFL,EAGP,UAHO,EAGK,SAHL,EAIP,SAJO,EAIK,UAJL,EAKP,UALO,EAKK,UALL,EAMP,UANO,EAMK,UANL,EAOP,UAPO,EAOK,UAPL,EAQP,UARO,EAQK,UARL,CAAT;AALgB;AAJlB,MAAIC,QAAQP,OAAA,CAAQ,gDAAR,CAAZ,EAEII,SAASJ,OAAA,CAAQ,kDAAR,CAFb;AAmBAO,OAAMC,CAAAA,QAAN,CAAeL,MAAf,EAAuBC,MAAvB,CAAA;AACAH,QAAOC,CAAAA,OAAP,GAAiBC,MAAjB;AAEAA,QAAOM,CAAAA,SAAP,GAAmB,IAAnB;AACAN,QAAOO,CAAAA,OAAP,GAAiB,GAAjB;AACAP,QAAOQ,CAAAA,YAAP,GAAsB,GAAtB;AACAR,QAAOS,CAAAA,SAAP,GAAmB,GAAnB;AAEAT,QAAOU,CAAAA,SAAUC,CAAAA,OAAjB,GAA2BC,QAAe,CAACC,GAAD,CAAM;AAC9C,WAAY,KAAZ,KAAIA,GAAJ,GACST,KAAMU,CAAAA,OAAN,CAAc,IAAKX,CAAAA,CAAEY,CAAAA,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAd,EAAmC,KAAnC,CADT,GAGSX,KAAMY,CAAAA,OAAN,CAAc,IAAKb,CAAAA,CAAEY,CAAAA,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAd,EAAmC,KAAnC,CAHT;AAD8C,GAAhD;AA9B6G,CAA7G;;",
"sources":["node_modules/hash_DOT_js/lib/hash/sha/384.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$sha$384\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","SHA384","SHA512","call","h","utils","inherits","blockSize","outSize","hmacStrength","padLength","prototype","_digest","SHA384.prototype._digest","enc","toHex32","slice","split32"]
}
