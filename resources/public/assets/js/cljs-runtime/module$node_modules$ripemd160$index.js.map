{
"version":3,
"file":"module$node_modules$ripemd160$index.js",
"lineCount":70,
"mappings":"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",
"sources":["node_modules/ripemd160/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ripemd160$index\"] = function(global,require,module,exports) {\n'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n\n};"],
"names":["shadow$provide","global","require","module","exports","RIPEMD160","HashBase","call","_a","_b","_c","_d","_e","rotl","x","n","Buffer","inherits","ARRAY16","Array","zl","zr","sl","sr","hl","hr","prototype","_update","RIPEMD160.prototype._update","j","_block","readInt32LE","al","bl","cl","dl","el","ar","br","cr","dr","er","i","m","k","s","e","tl","tr","t","_digest","RIPEMD160.prototype._digest","_blockOffset","fill","writeUInt32LE","_length","buffer","alloc","writeInt32LE"]
}
