{
"version":3,
"file":"module$node_modules$sha_DOT_js$hash.js",
"lineCount":45,
"mappings":"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",
"sources":["node_modules/sha_DOT_js/hash.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$sha_DOT_js$hash\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hash","blockSize","finalSize","_block","Buffer","alloc","_finalSize","_blockSize","_len","prototype","update","Hash.prototype.update","data","enc","from","block","length","accum","offset","assigned","remainder","Math","min","i","_update","digest","Hash.prototype.digest","rem","fill","bits","writeUInt32BE","lowBits","hash","_hash","toString","Hash.prototype._update","Error"]
}
