{
"version":3,
"file":"module$node_modules$create_hash$browser.js",
"lineCount":20,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,GAA4D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAQpGC,UAASA,KAAK,CAACC,IAAD,CAAO;AACnBC,QAAKC,CAAAA,IAAL,CAAU,IAAV,EAAgB,QAAhB,CAAA;AAEA,QAAKC,CAAAA,KAAL,GAAaH,IAAb;AAHmB;AANjBI,QAAAA,GAAWR,OAAA,CAAQ,+CAAR,CAAXQ;AACJ,MAAIC,MAAMT,OAAA,CAAQ,sCAAR,CAAV,EACIU,YAAYV,OAAA,CAAQ,qCAAR,CADhB,EAEIW,MAAMX,OAAA,CAAQ,sCAAR,CAFV,EAGIK,OAAOL,OAAA,CAAQ,uCAAR,CAHX;AAWAQ,QAAA,CAASL,IAAT,EAAeE,IAAf,CAAA;AAEAF,MAAKS,CAAAA,SAAUC,CAAAA,OAAf,GAAyBC,QAAS,CAACC,IAAD,CAAO;AACvC,QAAKR,CAAAA,KAAMS,CAAAA,MAAX,CAAkBD,IAAlB,CAAA;AADuC,GAAzC;AAIAZ,MAAKS,CAAAA,SAAUK,CAAAA,MAAf,GAAwBC,QAAS,EAAG;AAClC,WAAO,IAAKX,CAAAA,KAAMY,CAAAA,MAAX,EAAP;AADkC,GAApC;AAIAlB,QAAOC,CAAAA,OAAP,GAAiBkB,QAAoB,CAACC,GAAD,CAAM;AACzCA,OAAA,GAAMA,GAAIC,CAAAA,WAAJ,EAAN;AACA,WAAY,KAAZ,KAAID,GAAJ,GAA0B,IAAIZ,GAAJ,EAA1B,GACY,QAAZ,KAAIY,GAAJ,IAAgC,WAAhC,KAAwBA,GAAxB,GAAoD,IAAIX,SAAJ,EAApD,GAEO,IAAIP,IAAJ,CAASQ,GAAA,CAAIU,GAAJ,CAAT,CAHP;AAFyC,GAA3C;AAxBoG,CAApG;;",
"sources":["node_modules/create-hash/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_hash$browser\"] = function(global,require,module,exports) {\n'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hash","hash","Base","call","_hash","inherits","MD5","RIPEMD160","sha","prototype","_update","Hash.prototype._update","data","update","_final","Hash.prototype._final","digest","module.exports","alg","toLowerCase"]
}
