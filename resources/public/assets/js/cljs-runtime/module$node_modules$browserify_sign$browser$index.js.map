{
"version":3,
"file":"module$node_modules$browserify_sign$browser$index.js",
"lineCount":68,
"mappings":"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",
"sources":["node_modules/browserify-sign/browser/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_sign$browser$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar createHash = require('create-hash');\nvar stream = require('readable-stream');\nvar inherits = require('inherits');\nvar sign = require('./sign');\nvar verify = require('./verify');\n\nvar algorithms = require('./algorithms.json');\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex');\n  algorithms[key.toLowerCase()] = algorithms[key];\n});\n\nfunction Sign(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hashType = data.hash;\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Sign, stream.Writable);\n\nSign.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nSign.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nSign.prototype.sign = function signMethod(key, enc) {\n  this.end();\n  var hash = this._hash.digest();\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag);\n\n  return enc ? sig.toString(enc) : sig;\n};\n\nfunction Verify(algorithm) {\n  stream.Writable.call(this);\n\n  var data = algorithms[algorithm];\n  if (!data) { throw new Error('Unknown message digest'); }\n\n  this._hash = createHash(data.hash);\n  this._tag = data.id;\n  this._signType = data.sign;\n}\ninherits(Verify, stream.Writable);\n\nVerify.prototype._write = function _write(data, _, done) {\n  this._hash.update(data);\n  done();\n};\n\nVerify.prototype.update = function update(data, enc) {\n  this._hash.update(typeof data === 'string' ? Buffer.from(data, enc) : data);\n\n  return this;\n};\n\nVerify.prototype.verify = function verifyMethod(key, sig, enc) {\n  var sigBuffer = typeof sig === 'string' ? Buffer.from(sig, enc) : sig;\n\n  this.end();\n  var hash = this._hash.digest();\n  return verify(sigBuffer, hash, key, this._signType, this._tag);\n};\n\nfunction createSign(algorithm) {\n  return new Sign(algorithm);\n}\n\nfunction createVerify(algorithm) {\n  return new Verify(algorithm);\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Sign","algorithm","stream","Writable","call","data","algorithms","Error","_hashType","hash","_hash","createHash","_tag","id","_signType","sign","Verify","createSign","createVerify","Buffer","inherits","verify","Object","keys","forEach","key","from","toLowerCase","prototype","_write","Sign.prototype._write","_","done","update","Sign.prototype.update","enc","Sign.prototype.sign","end","digest","sig","toString","Verify.prototype._write","Verify.prototype.update","Verify.prototype.verify","sigBuffer"]
}
