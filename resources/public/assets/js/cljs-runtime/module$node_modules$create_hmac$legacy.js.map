{
"version":3,
"file":"module$node_modules$create_hmac$legacy.js",
"lineCount":26,
"mappings":"AAAAA,cAAA,CAAA,sCAAA,GAA2D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAUnGC,UAASA,KAAK,CAACC,GAAD,EAAMC,GAAN,CAAW;AACvBC,QAAKC,CAAAA,IAAL,CAAU,IAAV,EAAgB,QAAhB,CAAA;AACmB,YAAnB,KAAI,MAAOF,IAAX,KACEA,GADF,GACQG,MAAOC,CAAAA,IAAP,CAAYJ,GAAZ,CADR;AAIA,QAAKK,CAAAA,IAAL,GAAYN,GAAZ;AACA,QAAKO,CAAAA,IAAL,GAAYN,GAAZ;AATcO,MAWd,GAAIP,GAAIQ,CAAAA,MAAR,GACER,GADF,GACQD,GAAA,CAAIC,GAAJ,CADR,GAXcO,EAWd,GAEWP,GAAIQ,CAAAA,MAFf,KAGER,GAHF,GAGQG,MAAOM,CAAAA,MAAP,CAAc,CAACT,GAAD,EAAMU,KAAN,CAAd,EAdMH,EAcN,CAHR,CAAA;AAMII,OAAAA,GAAO,IAAKC,CAAAA,KAAZD,GAAoBR,MAAOU,CAAAA,WAAP,CAjBVN,EAiBU,CAApBI;AAGJ,SAFA,IAAIG,OAAO,IAAKC,CAAAA,KAAZD,GAAoBX,MAAOU,CAAAA,WAAP,CAlBVN,EAkBU,CAAxB,EAESS,IAAI,CAAb,EApBcT,EAoBd,GAAgBS,CAAhB,EAA+BA,CAAA,EAA/B;AACEL,SAAA,CAAKK,CAAL,CACA,GADUhB,GAAA,CAAIgB,CAAJ,CACV,GADmB,EACnB,EAAAF,IAAA,CAAKE,CAAL,CAAA,GAAUhB,GAAA,CAAIgB,CAAJ,CAAV,GAAmB,EAAnB;AAFF;AAKA,QAAKC,CAAAA,KAAL,GAAa,CAACN,GAAD,CAAb;AAvBuB;AARrBO,QAAAA,GAAWvB,OAAA,CAAQ,+CAAR,CAAXuB;AACJ,MAAIf,SAASR,OAAA,CAAQ,uCAAR,CAAuBQ,CAAAA,MAApC,EAEIF,OAAON,OAAA,CAAQ,uCAAR,CAFX,EAIIe,QAAQP,MAAOgB,CAAAA,KAAP,CAAa,GAAb,CAJZ;AAiCAD,QAAA,CAASpB,IAAT,EAAeG,IAAf,CAAA;AAEAH,MAAKsB,CAAAA,SAAUC,CAAAA,OAAf,GAAyBC,QAAS,CAACC,IAAD,CAAO;AACvC,QAAKN,CAAAA,KAAMO,CAAAA,IAAX,CAAgBD,IAAhB,CAAA;AADuC,GAAzC;AAIAzB,MAAKsB,CAAAA,SAAUK,CAAAA,MAAf,GAAwBC,QAAS,EAAG;AAClC,QAAIC,IAAI,IAAKtB,CAAAA,IAAL,CAAUF,MAAOM,CAAAA,MAAP,CAAc,IAAKQ,CAAAA,KAAnB,CAAV,CAAR;AACA,WAAO,IAAKZ,CAAAA,IAAL,CAAUF,MAAOM,CAAAA,MAAP,CAAc,CAAC,IAAKM,CAAAA,KAAN,EAAaY,CAAb,CAAd,CAAV,CAAP;AAFkC,GAApC;AAIA/B,QAAOC,CAAAA,OAAP,GAAiBC,IAAjB;AA9CmG,CAAnG;;",
"sources":["node_modules/create-hmac/legacy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_hmac$legacy\"] = function(global,require,module,exports) {\n'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hmac","alg","key","Base","call","Buffer","from","_alg","_key","blocksize","length","concat","ZEROS","ipad","_ipad","allocUnsafe","opad","_opad","i","_hash","inherits","alloc","prototype","_update","Hmac.prototype._update","data","push","_final","Hmac.prototype._final","h"]
}
