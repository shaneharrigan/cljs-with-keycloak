{
"version":3,
"file":"module$node_modules$browserify_aes$modes$cfb8.js",
"lineCount":12,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,GAAkE,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAC1G,MAAIC,SAASH,OAAA,CAAQ,uCAAR,CAAuBG,CAAAA,MAApC;AAcAD,SAAQE,CAAAA,OAAR,GAAkBC,QAAS,CAACC,aAAD,EAAOC,KAAP,EAAcC,gBAAd,CAAuB;AAKhD,SAJA,IAAIC,MAAMF,KAAMG,CAAAA,MAAhB,EACIC,MAAMR,MAAOS,CAAAA,WAAP,CAAmBH,GAAnB,CADV,EAEII,IAAI,CAAC,CAET,EAAO,EAAEA,CAAT,GAAaJ,GAAb,CAAA,CAAkB;AACZI,UAAAA,wBAAAA,CAAAA,EAAiBP,OAAAA,aAAjBO,EAAuB,YAAAN,KAAA,CAAMM,CAAN,CAAvBA,EAAiCL,UAAAA,gBAAjCK,EAhBFF,eADML,IAAKQ,CAAAA,OAAQC,CAAAA,YAAbC,CAA0BV,IAAKW,CAAAA,KAA/BD,CACA,CAAI,CAAJ,CAANL,GAAeO,SAgBbL;AAdNP,UAAKW,CAAAA,KAAL,GAAad,MAAOgB,CAAAA,MAAP,CAAc,CACzBb,IAAKW,CAAAA,KAAMG,CAAAA,KAAX,CAAiB,CAAjB,CADyB,EAEzBjB,MAAOkB,CAAAA,IAAP,CAAY,CAACb,OAAA,GAAUU,SAAV,GAAsBP,YAAvB,CAAZ,CAFyB,CAAd,CAAb;AAcEA,SAAA,CAAIE,qBAAJ,CAAA,GATKF,YASL;AADgB;AAIlB,WAAOA,GAAP;AATgD,GAAlD;AAf0G,CAA1G;;",
"sources":["node_modules/browserify-aes/modes/cfb8.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_aes$modes$cfb8\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","encrypt","exports.encrypt","self","chunk","decrypt","len","length","out","allocUnsafe","i","_cipher","encryptBlock","pad","_prev","byteParam","concat","slice","from"]
}
