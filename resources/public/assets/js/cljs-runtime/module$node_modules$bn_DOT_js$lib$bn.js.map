{
"version":3,
"file":"module$node_modules$bn_DOT_js$lib$bn.js",
"lineCount":1980,
"mappings":"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",
"sources":["node_modules/bn_DOT_js/lib/bn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bn_DOT_js$lib$bn\"] = function(global,require,module,exports) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};"],
"names":["shadow$provide","global","require","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","b","move","dest","src","inspect","toString","smallMulTo","self","num","out","a","carry","k","ncarry","rword","maxJ","j","max","_strip","bigMulTo","hncarry","lo","MPrime","name","p","n","bitLength","iushln","isub","tmp","_tmp","K256","call","P224","P192","P25519","Red","m","prime","_prime","gtn","Mont","shift","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","sub","wordSize","Buffer","window","e","BN.isBN","Array","isArray","BN.max","left","right","cmp","BN.min","BN.prototype._init","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","BN.prototype._initNumber","BN.prototype._initArray","ceil","off","w","BN.prototype._parseHex","BN.prototype._parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","BN.prototype.copy","_move","BN.prototype._move","clone","BN.prototype.clone","_expand","BN.prototype._expand","size","BN.prototype._strip","_normSign","BN.prototype._normSign","Symbol","for","zeros","groupSizes","groupBases","BN.prototype.toString","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","BN.prototype.toNumber","ret","toJSON","BN.prototype.toJSON","toBuffer","BN.prototype.toBuffer","toArrayLike","BN.prototype.toArray","BN.prototype.toArrayLike","ArrayType","byteLength","reqLength","allocUnsafe","postfix","res","_toArrayLikeLE","BN.prototype._toArrayLikeLE","position","_toArrayLikeBE","BN.prototype._toArrayLikeBE","_countBits","clz32","BN.prototype._countBits","t","_zeroBits","BN.prototype._zeroBits","BN.prototype.bitLength","hi","zeroBits","BN.prototype.zeroBits","BN.prototype.byteLength","toTwos","BN.prototype.toTwos","width","abs","inotn","iaddn","fromTwos","BN.prototype.fromTwos","testn","notn","ineg","isNeg","BN.prototype.isNeg","neg","BN.prototype.neg","BN.prototype.ineg","iuor","BN.prototype.iuor","ior","BN.prototype.ior","or","BN.prototype.or","uor","BN.prototype.uor","iuand","BN.prototype.iuand","iand","BN.prototype.iand","and","BN.prototype.and","uand","BN.prototype.uand","iuxor","BN.prototype.iuxor","ixor","BN.prototype.ixor","xor","BN.prototype.xor","uxor","BN.prototype.uxor","BN.prototype.inotn","bytesNeeded","bitsLeft","BN.prototype.notn","setn","BN.prototype.setn","bit","wbit","iadd","BN.prototype.iadd","add","BN.prototype.add","BN.prototype.isub","BN.prototype.sub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","BN.prototype.mulTo","BN.prototype.mul","mulf","BN.prototype.mulf","BN.prototype.imul","BN.prototype.imuln","isNegNum","muln","BN.prototype.muln","BN.prototype.sqr","isqr","BN.prototype.isqr","BN.prototype.pow","q","BN.prototype.iushln","bits","s","carryMask","newCarry","ishln","BN.prototype.ishln","iushrn","BN.prototype.iushrn","hint","extended","mask","h","ishrn","BN.prototype.ishrn","shln","BN.prototype.shln","ushln","BN.prototype.ushln","shrn","BN.prototype.shrn","ushrn","BN.prototype.ushrn","BN.prototype.testn","imaskn","BN.prototype.imaskn","maskn","BN.prototype.maskn","BN.prototype.iaddn","BN.prototype._iaddn","BN.prototype.isubn","addn","BN.prototype.addn","subn","BN.prototype.subn","iabs","BN.prototype.iabs","BN.prototype.abs","_ishlnsubmul","BN.prototype._ishlnsubmul","_wordDiv","BN.prototype._wordDiv","mode","bhi","bhiBits","diff","qj","divmod","BN.prototype.divmod","positive","divn","BN.prototype.div","BN.prototype.mod","BN.prototype.umod","divRound","BN.prototype.divRound","dm","half","andln","BN.prototype.modrn","acc","modn","BN.prototype.modn","BN.prototype.idivn","BN.prototype.divn","egcd","BN.prototype.egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","BN.prototype._invmp","x1","x2","delta","cmpn","BN.prototype.gcd","invm","BN.prototype.invm","BN.prototype.isEven","BN.prototype.isOdd","BN.prototype.andln","bincn","BN.prototype.bincn","BN.prototype.isZero","BN.prototype.cmpn","BN.prototype.cmp","ucmp","BN.prototype.ucmp","BN.prototype.gtn","gt","BN.prototype.gt","gten","BN.prototype.gten","gte","BN.prototype.gte","ltn","BN.prototype.ltn","lt","BN.prototype.lt","lten","BN.prototype.lten","lte","BN.prototype.lte","eqn","BN.prototype.eqn","eq","BN.prototype.eq","BN.red","toRed","BN.prototype.toRed","ctx","convertTo","_forceRed","fromRed","BN.prototype.fromRed","convertFrom","BN.prototype._forceRed","forceRed","BN.prototype.forceRed","redAdd","BN.prototype.redAdd","redIAdd","BN.prototype.redIAdd","redSub","BN.prototype.redSub","redISub","BN.prototype.redISub","redShl","BN.prototype.redShl","shl","redMul","BN.prototype.redMul","_verify2","redIMul","BN.prototype.redIMul","redSqr","BN.prototype.redSqr","_verify1","redISqr","BN.prototype.redISqr","redSqrt","BN.prototype.redSqrt","sqrt","redInvm","BN.prototype.redInvm","redNeg","BN.prototype.redNeg","redPow","BN.prototype.redPow","primes","k256","p224","p192","p25519","MPrime.prototype._tmp","ireduce","MPrime.prototype.ireduce","split","imulK","rlen","undefined","strip","MPrime.prototype.split","input","MPrime.prototype.imulK","K256.prototype.split","output","outLen","prev","next","K256.prototype.imulK","P25519.prototype.imulK","BN._prime","Red.prototype._verify1","Red.prototype._verify2","Red.prototype.imod","Red.prototype.neg","Red.prototype.add","Red.prototype.iadd","Red.prototype.sub","Red.prototype.isub","Red.prototype.shl","Red.prototype.imul","Red.prototype.mul","Red.prototype.isqr","Red.prototype.sqr","Red.prototype.sqrt","mod3","one","nOne","lpow","z","Red.prototype.invm","inv","Red.prototype.pow","wnd","current","currentLen","windowSize","Red.prototype.convertTo","Red.prototype.convertFrom","mont","BN.mont","Mont.prototype.convertTo","Mont.prototype.convertFrom","Mont.prototype.imul","u","Mont.prototype.mul","Mont.prototype.invm"]
}
