{
"version":3,
"file":"module$node_modules$public_encrypt$privateDecrypt.js",
"lineCount":69,
"mappings":"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",
"sources":["node_modules/public-encrypt/privateDecrypt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$public_encrypt$privateDecrypt\"] = function(global,require,module,exports) {\nvar parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseKeys","mgf","xor","BN","crt","createHash","withPublic","Buffer","module.exports","privateKey","enc","reverse","padding","key","k","modulus","byteLength","length","cmp","Error","msg","zBuffer","alloc","concat","iHash","update","digest","hLen","maskedSeed","slice","maskedDb","seed","db","a","from","b","dif","len","Math","min","i","p1","status","ps","toString"]
}
