{
"version":3,
"file":"module$node_modules$safe_buffer$index.js",
"lineCount":41,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,GAA0D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAOlGC,UAASA,UAAU,CAACC,GAAD,EAAMC,GAAN,CAAW;AAC5B,SAAKC,IAAIA,GAAT,GAAgBF,IAAhB;AACEC,SAAA,CAAIC,GAAJ,CAAA,GAAWF,GAAA,CAAIE,GAAJ,CAAX;AADF;AAD4B;AAa9BC,UAASA,WAAW,CAACC,GAAD,EAAMC,gBAAN,EAAwBC,MAAxB,CAAgC;AAClD,WAAOC,MAAA,CAAOH,GAAP,EAAYC,gBAAZ,EAA8BC,MAA9B,CAAP;AADkD;AAjBpD,MAAIE,SAASZ,OAAA,CAAQ,kCAAR,CAAb,EACIW,SAASC,MAAOD,CAAAA,MADpB;AASIA,QAAOE,CAAAA,IAAX,IAAmBF,MAAOG,CAAAA,KAA1B,IAAmCH,MAAOI,CAAAA,WAA1C,IAAyDJ,MAAOK,CAAAA,eAAhE,GACEf,MAAOC,CAAAA,OADT,GACmBU,MADnB,IAIET,SAAA,CAAUS,MAAV,EAAkBV,OAAlB,CACA,EAAAA,OAAQS,CAAAA,MAAR,GAAiBJ,UALnB,CAAA;AAYAA,YAAWU,CAAAA,SAAX,GAAuBC,MAAOC,CAAAA,MAAP,CAAcR,MAAOM,CAAAA,SAArB,CAAvB;AAGAd,WAAA,CAAUQ,MAAV,EAAkBJ,UAAlB,CAAA;AAEAA,YAAWM,CAAAA,IAAX,GAAkBO,QAAS,CAACZ,GAAD,EAAMC,gBAAN,EAAwBC,MAAxB,CAAgC;AACzD,QAAmB,QAAnB,KAAI,MAAOF,IAAX;AACE,YAAM,IAAIa,SAAJ,CAAc,+BAAd,CAAN;AADF;AAGA,WAAOV,MAAA,CAAOH,GAAP,EAAYC,gBAAZ,EAA8BC,MAA9B,CAAP;AAJyD,GAA3D;AAOAH,YAAWO,CAAAA,KAAX,GAAmBQ,QAAS,CAACC,IAAD,EAAOC,IAAP,EAAaC,QAAb,CAAuB;AACjD,QAAoB,QAApB,KAAI,MAAOF,KAAX;AACE,YAAM,IAAIF,SAAJ,CAAc,2BAAd,CAAN;AADF;AAGIK,QAAAA,GAAMf,MAAA,CAAOY,IAAP,CAANG;AACSC,QAAAA,EAAb,KAAIH,IAAJ,GAC0B,QAAxB,KAAI,MAAOC,SAAX,GACEC,IAAIF,CAAAA,IAAJ,CAASA,IAAT,EAAeC,QAAf,CADF,GAGEC,IAAIF,CAAAA,IAAJ,CAASA,IAAT,CAJJ,GAOEE,IAAIF,CAAAA,IAAJ,CAAS,CAAT,CAPF;AASA,WAAOE,IAAP;AAdiD,GAAnD;AAiBAnB,YAAWQ,CAAAA,WAAX,GAAyBa,QAAS,CAACL,IAAD,CAAO;AACvC,QAAoB,QAApB,KAAI,MAAOA,KAAX;AACE,YAAM,IAAIF,SAAJ,CAAc,2BAAd,CAAN;AADF;AAGA,WAAOV,MAAA,CAAOY,IAAP,CAAP;AAJuC,GAAzC;AAOAhB,YAAWS,CAAAA,eAAX,GAA6Ba,QAAS,CAACN,IAAD,CAAO;AAC3C,QAAoB,QAApB,KAAI,MAAOA,KAAX;AACE,YAAM,IAAIF,SAAJ,CAAc,2BAAd,CAAN;AADF;AAGA,WAAOT,MAAOkB,CAAAA,UAAP,CAAkBP,IAAlB,CAAP;AAJ2C,GAA7C;AA5DkG,CAAlG;;",
"sources":["node_modules/safe-buffer/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$safe_buffer$index\"] = function(global,require,module,exports) {\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","copyProps","src","dst","key","SafeBuffer","arg","encodingOrOffset","length","Buffer","buffer","from","alloc","allocUnsafe","allocUnsafeSlow","prototype","Object","create","SafeBuffer.from","TypeError","SafeBuffer.alloc","size","fill","encoding","buf","undefined","SafeBuffer.allocUnsafe","SafeBuffer.allocUnsafeSlow","SlowBuffer"]
}
