{
"version":3,
"file":"module$node_modules$create_ecdh$browser.js",
"lineCount":58,
"mappings":"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",
"sources":["node_modules/create-ecdh/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_ecdh$browser\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nvar elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","ECDH","curve","curveType","aliases","name","elliptic","ec","keys","formatReturnValue","bn","enc","len","Array","isArray","toArray","buf","Buffer","length","zeros","fill","concat","toString","BN","module.exports","secp256k1","byteLength","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","p224","p256","secp256r1","p192","secp192r1","p384","p521","prototype","generateKeys","ECDH.prototype.generateKeys","format","genKeyPair","getPublicKey","computeSecret","ECDH.prototype.computeSecret","other","inenc","isBuffer","out","keyFromPublic","getPublic","otherPub","mul","getPrivate","getX","ECDH.prototype.getPublicKey","key","getPrivateKey","ECDH.prototype.getPrivateKey","setPublicKey","ECDH.prototype.setPublicKey","pub","_importPublic","setPrivateKey","ECDH.prototype.setPrivateKey","priv","_priv","_importPrivate"]
}
