{
"version":3,
"file":"module$node_modules$readable_stream$lib$_stream_writable.js",
"lineCount":233,
"mappings":"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",
"sources":["node_modules/readable-stream/lib/_stream_writable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$readable_stream$lib$_stream_writable\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n};"],
"names":["shadow$provide","global","require","module","exports","CorkedRequest","state","_this","entry","next","finish","this.finish","cb","callback","pendingcb","err","corkedRequestsFree","nop","WritableState","options","stream","Duplex","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","Math","floor","destroyed","finished","ended","ending","needDrain","finalCalled","decodeStrings","defaultEncoding","length","writing","corked","sync","bufferProcessing","onwrite","this.onwrite","er","_writableState","writecb","writelen","pna","nextTick","finishMaybe","errorEmitted","emit","needFinish","bufferedRequest","clearBuffer","asyncWrite","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","Writable","realHasInstance","call","writable","write","_write","writev","_writev","destroy","_destroy","final","_final","Stream","doWrite","len","chunk","encoding","buffer","Array","holder","count","allBuffers","isBuf","callFinal","need","process","browser","indexOf","version","slice","setImmediate","util","Object","create","inherits","internalUtil","deprecate","Buffer","OurUint8Array","Uint8Array","window","self","destroyImpl","prototype","getBuffer","WritableState.prototype.getBuffer","current","out","push","defineProperty","get","_","Symbol","hasInstance","Function","value","object","pipe","Writable.prototype.pipe","Error","Writable.prototype.write","ret","isBuffer","obj","from","valid","TypeError","undefined","newChunk","last","cork","Writable.prototype.cork","uncork","Writable.prototype.uncork","setDefaultEncoding","Writable.prototype.setDefaultEncoding","toLowerCase","enumerable","Writable.prototype._write","end","Writable.prototype.end","once","set","_undestroy","undestroy","Writable.prototype._destroy"]
}
