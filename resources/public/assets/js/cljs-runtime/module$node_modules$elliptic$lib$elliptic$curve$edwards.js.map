{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$edwards.js",
"lineCount":207,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/edwards.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$edwards\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n};"],
"names":["shadow$provide","global","require","module","exports","EdwardsCurve","conf","extended","mOneA","twisted","a","Base","call","umod","BN","red","m","toRed","c","c2","redSqr","d","dd","redAdd","assert","fromRed","cmpn","oneC","Point","curve","x","y","z","t","BasePoint","zero","one","zOne","redMul","redInvm","utils","inherits","prototype","_mulA","EdwardsCurve.prototype._mulA","num","redNeg","_mulC","EdwardsCurve.prototype._mulC","jpoint","EdwardsCurve.prototype.jpoint","point","pointFromX","EdwardsCurve.prototype.pointFromX","odd","x2","rhs","redSub","lhs","y2","redSqrt","cmp","Error","isOdd","pointFromY","EdwardsCurve.prototype.pointFromY","validate","EdwardsCurve.prototype.validate","isInfinity","normalize","pointFromJSON","EdwardsCurve.prototype.pointFromJSON","obj","fromJSON","EdwardsCurve.prototype.point","Point.fromJSON","inspect","Point.prototype.inspect","toString","Point.prototype.isInfinity","_extDbl","Point.prototype._extDbl","b","redIAdd","e","redISub","g","f","h","nx","ny","nt","nz","_projDbl","Point.prototype._projDbl","two","j","dbl","Point.prototype.dbl","_extAdd","Point.prototype._extAdd","p","_projAdd","Point.prototype._projAdd","tmp","add","Point.prototype.add","mul","Point.prototype.mul","k","_hasDoubles","_fixedNafMul","_wnafMul","mulAdd","Point.prototype.mulAdd","k1","k2","_wnafMulAdd","jmulAdd","Point.prototype.jmulAdd","Point.prototype.normalize","zi","neg","Point.prototype.neg","getX","Point.prototype.getX","getY","Point.prototype.getY","eq","Point.prototype.eq","other","eqXToP","Point.prototype.eqXToP","rx","xc","clone","redN","iadd","n","toP","mixedAdd"]
}
