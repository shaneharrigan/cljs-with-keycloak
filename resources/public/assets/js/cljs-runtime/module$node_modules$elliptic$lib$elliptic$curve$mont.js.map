{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$mont.js",
"lineCount":96,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/mont.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$mont\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","MontCurve","conf","Base","call","a","toRed","BN","red","b","i4","redInvm","two","a24","redMul","redAdd","Point","curve","x","z","BasePoint","one","zero","inherits","utils","prototype","validate","MontCurve.prototype.validate","point","normalize","x2","redSqr","rhs","redSqrt","y","cmp","decodePoint","MontCurve.prototype.decodePoint","bytes","enc","toArray","MontCurve.prototype.point","pointFromJSON","MontCurve.prototype.pointFromJSON","obj","fromJSON","precompute","Point.prototype.precompute","_encode","Point.prototype._encode","getX","p","byteLength","Point.fromJSON","inspect","Point.prototype.inspect","isInfinity","fromRed","toString","Point.prototype.isInfinity","cmpn","dbl","Point.prototype.dbl","aa","bb","redSub","c","nx","nz","add","Point.prototype.add","Error","diffAdd","Point.prototype.diffAdd","diff","da","d","cb","redISub","mul","Point.prototype.mul","k","t","clone","bits","iushrn","push","andln","i","length","mulAdd","Point.prototype.mulAdd","jumlAdd","Point.prototype.jumlAdd","eq","Point.prototype.eq","other","Point.prototype.normalize","Point.prototype.getX"]
}
