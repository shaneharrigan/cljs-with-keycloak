{
"version":3,
"file":"module$node_modules$readable_stream$node_modules$string_decoder$lib$string_decoder.js",
"lineCount":214,
"mappings":"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",
"sources":["node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$readable_stream$node_modules$string_decoder$lib$string_decoder\"] = function(global,require,module,exports) {\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_normalizeEncoding","enc","retried","toLowerCase","StringDecoder","encoding","nenc","Buffer","isEncoding","Error","text","utf16Text","end","utf16End","nb","fillLast","utf8FillLast","base64Text","base64End","write","simpleWrite","simpleEnd","lastTotal","lastNeed","lastChar","allocUnsafe","utf8CheckByte","byte","utf8CheckIncomplete","self","buf","i","j","length","p","undefined","r","copy","toString","c","charCodeAt","slice","n","prototype","StringDecoder.prototype.write","utf8End","utf8Text","total","StringDecoder.prototype.fillLast"]
}
