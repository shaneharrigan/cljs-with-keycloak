{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$eddsa$key.js",
"lineCount":57,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/eddsa/key.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$eddsa$key\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n};"],
"names":["shadow$provide","global","require","module","exports","KeyPair","eddsa","params","_secret","parseBytes","secret","isPoint","pub","_pub","_pubBytes","utils","assert","cachedProperty","fromPublic","KeyPair.fromPublic","fromSecret","KeyPair.fromSecret","prototype","KeyPair.prototype.secret","pubBytes","encodePoint","decodePoint","g","mul","priv","privBytes","hash","lastIx","encodingLength","a","slice","decodeInt","update","digest","messagePrefix","sign","KeyPair.prototype.sign","message","verify","KeyPair.prototype.verify","sig","getSecret","KeyPair.prototype.getSecret","enc","encode","getPublic","KeyPair.prototype.getPublic"]
}
