{
"version":3,
"file":"module$node_modules$minimalistic_crypto_utils$lib$utils.js",
"lineCount":44,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAqCpHC,UAASA,MAAK,CAACC,IAAD,CAAO;AACnB,WAAoB,CAApB,KAAIA,IAAKC,CAAAA,MAAT,GACS,GADT,GACeD,IADf,GAGSA,IAHT;AADmB;AAQrBE,UAASA,MAAK,CAACC,GAAD,CAAM;AAElB,SADA,IAAIC,MAAM,EAAV,EACSC,IAAI,CAAb,EAAgBA,CAAhB,GAAoBF,GAAIF,CAAAA,MAAxB,EAAgCI,CAAA,EAAhC;AACED,SAAA,IAAOL,KAAA,CAAMI,GAAA,CAAIE,CAAJ,CAAOC,CAAAA,QAAP,CAAgB,EAAhB,CAAN,CAAP;AADF;AAEA,WAAOF,GAAP;AAJkB;AA1CRN,SAgCNS,CAAAA,OAAN,GA9BAA,QAAgB,CAACJ,GAAD,EAAMK,GAAN,CAAW;AACzB,QAAIC,KAAMC,CAAAA,OAAN,CAAcP,GAAd,CAAJ;AACE,aAAOA,GAAIQ,CAAAA,KAAJ,EAAP;AADF;AAEA,QAAI,CAACR,GAAL;AACE,aAAO,EAAP;AADF;AAEA,QAAIC,MAAM,EAAV;AACA,QAAmB,QAAnB,KAAI,MAAOD,IAAX,CAA6B;AAC3B,WAASE,GAAT,GAAa,CAAb,EAAgBA,GAAhB,GAAoBF,GAAIF,CAAAA,MAAxB,EAAgCI,GAAA,EAAhC;AACED,WAAA,CAAIC,GAAJ,CAAA,GAASF,GAAA,CAAIE,GAAJ,CAAT,GAAkB,CAAlB;AADF;AAEA,aAAOD,GAAP;AAH2B;AAK7B,QAAY,KAAZ,KAAII,GAAJ;AAIE,WAHAL,GAGK,GAHCA,GAAIS,CAAAA,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAGD,EAFkB,CAElB,KAFDT,GAAIF,CAAAA,MAEH,GAFY,CAEZ,KADHE,GACG,GADG,GACH,GADSA,GACT,GAAIE,GAAJ,GAAQ,CAAb,EAAgBA,GAAhB,GAAoBF,GAAIF,CAAAA,MAAxB,EAAgCI,GAAhC,IAAqC,CAArC;AACED,WAAIS,CAAAA,IAAJ,CAASC,QAAA,CAASX,GAAA,CAAIE,GAAJ,CAAT,GAAkBF,GAAA,CAAIE,GAAJ,GAAQ,CAAR,CAAlB,EAA8B,EAA9B,CAAT,CAAA;AADF;AAJF;AAOE,WAASA,GAAT,GAAa,CAAb,EAAgBA,GAAhB,GAAoBF,GAAIF,CAAAA,MAAxB,EAAgCI,GAAA,EAAhC,CAAqC;AACnC,YAAIU,IAAIZ,GAAIa,CAAAA,UAAJ,CAAeX,GAAf,CAAR,EACIY,KAAKF,CAALE,IAAU,CADd;AAESF,SAALG,IAAS,GAATA;AACAD,UAAJ,GACEb,GAAIS,CAAAA,IAAJ,CAASI,EAAT,EAAaC,CAAb,CADF,GAGEd,GAAIS,CAAAA,IAAJ,CAASK,CAAT,CAHF;AAJmC;AAPvC;AAiBA,WAAOd,GAAP;AA5ByB,GA8B3B;AAhCYN,SAwCNC,CAAAA,KAAN,GAAcA,KAAd;AAxCYD,SAgDNI,CAAAA,KAAN,GAAcA,KAAd;AAhDYJ,SAkDNqB,CAAAA,MAAN,GAAeC,QAAe,CAACC,GAAD,EAAMb,GAAN,CAAW;AACvC,WAAY,KAAZ,KAAIA,GAAJ,GACSN,KAAA,CAAMmB,GAAN,CADT,GAGSA,GAHT;AADuC,GAAzC;AArDoH,CAApH;;",
"sources":["node_modules/minimalistic-crypto-utils/lib/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$minimalistic_crypto_utils$lib$utils\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","zero2","word","length","toHex","msg","res","i","toString","toArray","enc","Array","isArray","slice","replace","push","parseInt","c","charCodeAt","hi","lo","encode","utils.encode","arr"]
}
