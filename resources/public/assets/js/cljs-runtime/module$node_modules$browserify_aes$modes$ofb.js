shadow$provide.module$node_modules$browserify_aes$modes$ofb = function(global, require, module, exports) {
  var Buffer = require("module$node_modules$buffer$index").Buffer, xor = require("module$node_modules$buffer_xor$index");
  exports.encrypt = function(self$jscomp$0, chunk) {
    for (; self$jscomp$0._cache.length < chunk.length;) {
      var JSCompiler_temp_const = Buffer, JSCompiler_temp_const$jscomp$0 = JSCompiler_temp_const.concat, JSCompiler_temp_const$jscomp$1 = self$jscomp$0._cache, self = self$jscomp$0;
      self._prev = self._cipher.encryptBlock(self._prev);
      self$jscomp$0._cache = JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const, [JSCompiler_temp_const$jscomp$1, self._prev]);
    }
    JSCompiler_temp_const = self$jscomp$0._cache.slice(0, chunk.length);
    self$jscomp$0._cache = self$jscomp$0._cache.slice(chunk.length);
    return xor(chunk, JSCompiler_temp_const);
  };
};

//# sourceMappingURL=module$node_modules$browserify_aes$modes$ofb.js.map
