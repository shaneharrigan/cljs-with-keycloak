shadow$provide.module$node_modules$browserify_rsa$index = function(global, require, module, exports) {
  function getr(priv) {
    var len = priv.modulus.byteLength();
    do {
      var r = new BN(randomBytes(len));
    } while (0 <= r.cmp(priv.modulus) || !r.umod(priv.prime1) || !r.umod(priv.prime2));
    return r;
  }
  function crt(msg, priv) {
    var JSCompiler_object_inline_unblinder_2346 = getr(priv);
    var JSCompiler_object_inline_blinder_2345 = JSCompiler_object_inline_unblinder_2346.toRed(BN.mont(priv.modulus)).redPow(new BN(priv.publicExponent)).fromRed();
    JSCompiler_object_inline_unblinder_2346 = JSCompiler_object_inline_unblinder_2346.invm(priv.modulus);
    var len = priv.modulus.byteLength();
    msg = (new BN(msg)).mul(JSCompiler_object_inline_blinder_2345).umod(priv.modulus);
    var c1 = msg.toRed(BN.mont(priv.prime1)), c2 = msg.toRed(BN.mont(priv.prime2));
    msg = priv.coefficient;
    JSCompiler_object_inline_blinder_2345 = priv.prime1;
    var q = priv.prime2;
    c1 = c1.redPow(priv.exponent1).fromRed();
    c2 = c2.redPow(priv.exponent2).fromRed();
    msg = c1.isub(c2).imul(msg).umod(JSCompiler_object_inline_blinder_2345).imul(q);
    return c2.iadd(msg).imul(JSCompiler_object_inline_unblinder_2346).umod(priv.modulus).toArrayLike(Buffer, "be", len);
  }
  var Buffer = require("module$node_modules$buffer$index").Buffer, BN = require("module$node_modules$bn_DOT_js$lib$bn"), randomBytes = require("module$node_modules$randombytes$browser");
  crt.getr = getr;
  module.exports = crt;
};

//# sourceMappingURL=module$node_modules$browserify_rsa$index.js.map
