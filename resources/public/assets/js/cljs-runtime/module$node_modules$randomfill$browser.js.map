{
"version":3,
"file":"module$node_modules$randomfill$browser.js",
"lineCount":82,
"mappings":"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",
"sources":["node_modules/randomfill/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$randomfill$browser\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","oldBrowser","Error","assertOffset","offset","length","TypeError","kMaxUint32","kBufferMaxLength","RangeError","assertSize","size","randomFill","buf","cb","Buffer","isBuffer","Uint8Array","actualFill","process","browser","uint","buffer","crypto","getRandomValues","nextTick","randombytes","err","bytes","copy","randomFillSync","undefined","safeBuffer","kMaxLength","msCrypto","Math","pow"]
}
