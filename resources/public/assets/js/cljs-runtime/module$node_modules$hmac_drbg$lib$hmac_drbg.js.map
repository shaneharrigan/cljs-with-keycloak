{
"version":3,
"file":"module$node_modules$hmac_drbg$lib$hmac_drbg.js",
"lineCount":62,
"mappings":"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",
"sources":["node_modules/hmac-drbg/lib/hmac-drbg.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hmac_drbg$lib$hmac_drbg\"] = function(global,require,module,exports) {\n'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","HmacDRBG","options","hash","predResist","outLen","outSize","minEntropy","hmacStrength","V","K","reseedInterval","_reseed","entropy","utils","toArray","entropyEnc","nonce","nonceEnc","pers","persEnc","assert","length","_init","prototype","HmacDRBG.prototype._init","seed","concat","Array","i","_update","_hmac","HmacDRBG.prototype._hmac","hmac","HmacDRBG.prototype._update","kmac","update","digest","reseed","HmacDRBG.prototype.reseed","add","addEnc","generate","HmacDRBG.prototype.generate","len","enc","Error","temp","res","slice","encode"]
}
