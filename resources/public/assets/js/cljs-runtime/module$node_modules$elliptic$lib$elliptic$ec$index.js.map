{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$ec$index.js",
"lineCount":121,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/ec/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$ec$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","EC","options","assert","Object","prototype","hasOwnProperty","call","curves","PresetCurve","curve","n","nh","ushrn","g","precompute","bitLength","hash","BN","HmacDRBG","utils","rand","KeyPair","Signature","keyPair","EC.prototype.keyPair","keyFromPrivate","EC.prototype.keyFromPrivate","priv","enc","fromPrivate","keyFromPublic","EC.prototype.keyFromPublic","pub","fromPublic","genKeyPair","EC.prototype.genKeyPair","drbg","pers","persEnc","entropy","hmacStrength","entropyEnc","nonce","toArray","bytes","byteLength","ns2","sub","generate","cmp","iaddn","_truncateToN","EC.prototype._truncateToN","msg","truncOnly","delta","sign","EC.prototype.sign","key","bkey","getPrivate","ns1","iter","k","cmpn","kp","mul","isInfinity","kpX","getX","r","umod","s","invm","iadd","recoveryParam","getY","isOdd","canonical","verify","EC.prototype.verify","signature","sinv","u1","u2","_maxwellTrick","p","mulAdd","getPublic","jmulAdd","eqXToP","recoverPubKey","EC.prototype.recoverPubKey","j","e","isYOdd","isSecondKey","Error","pointFromX","add","rInv","s1","s2","getKeyRecoveryParam","EC.prototype.getKeyRecoveryParam","Q","i","Qprime","eq"]
}
