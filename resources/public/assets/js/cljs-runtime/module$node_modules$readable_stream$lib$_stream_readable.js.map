{
"version":3,
"file":"module$node_modules$readable_stream$lib$_stream_readable.js",
"lineCount":432,
"mappings":"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",
"sources":["node_modules/readable-stream/lib/_stream_readable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$readable_stream$lib$_stream_readable\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, { hasUnpiped: false });\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","prependListener","emitter","event","fn","_events","isArray","unshift","on","ReadableState","options","stream","Duplex","isDuplex","objectMode","readableObjectMode","hwm","highWaterMark","readableHwm","readableHighWaterMark","defaultHwm","Math","floor","buffer","BufferList","length","pipes","pipesCount","flowing","reading","endEmitted","ended","sync","destroyed","resumeScheduled","readableListening","emittedReadable","needReadable","defaultEncoding","awaitDrain","readingMore","encoding","decoder","StringDecoder","Readable","_readableState","readable","read","_read","destroy","_destroy","Stream","call","readableAddChunk","chunk","addToFront","skipChunkCheck","state","end","push","emitReadable","er","Buffer","isBuffer","OurUint8Array","undefined","TypeError","emit","Object","getPrototypeOf","prototype","from","Error","addChunk","write","pna","nextTick","maybeReadMore_","howMuchToRead","n","head","data","MAX_HWM","debug","emitReadable_","flow","len","pipeOnDrain","src","listeners","type","nReadingNextTick","self","resume_","fromList","ret","shift","join","concat","clear","list","slice","p","c","next","str","nb","tail","allocUnsafe","copy","buf","endReadable","endReadableNT","indexOf","xs","x","i","l","process","EventEmitter","Uint8Array","window","util","create","inherits","debugUtil","debuglog","destroyImpl","kProxyEvents","defineProperty","get","set","value","_undestroy","undestroy","Readable.prototype._destroy","err","cb","Readable.prototype.push","Readable.prototype.unshift","isPaused","Readable.prototype.isPaused","setEncoding","Readable.prototype.setEncoding","enc","Readable.prototype.read","parseInt","nOrig","doRead","Readable.prototype._read","pipe","Readable.prototype.pipe","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","onend","unpipe","ondata","cleanedUp","_writableState","needDrain","increasedAwaitDrain","pause","endFn","stdout","stderr","once","resume","Readable.prototype.unpipe","dests","index","splice","Readable.prototype.on","ev","res","addListener","Readable.prototype.resume","Readable.prototype.pause","wrap","Readable.prototype.wrap","_this","paused","method","apply","arguments","bind","this._read","enumerable","_fromList"]
}
