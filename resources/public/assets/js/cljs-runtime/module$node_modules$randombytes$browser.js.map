{
"version":3,
"file":"module$node_modules$randombytes$browser.js",
"lineCount":28,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,GAA4D,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAYpGC,UAASA,WAAW,EAAG;AACrB,UAAUC,KAAJ,CAAU,gHAAV,CAAN;AADqB;AAavBC,UAASA,YAAY,CAACC,IAAD,EAAOC,EAAP,CAAW;AAE9B,QAjBeC,UAiBf,GAAIF,IAAJ;AAAuB,YAAM,IAAIG,UAAJ,CAAe,iCAAf,CAAN;AAAvB;AAEA,QAAIC,QAAQC,MAAOC,CAAAA,WAAP,CAAmBN,IAAnB,CAAZ;AAEA,QAAW,CAAX,GAAIA,IAAJ;AACE,UA1BYO,KA0BZ,GAAIP,IAAJ;AAEE,aAAK,IAAIQ,YAAY,CAArB,EAAwBA,SAAxB,GAAoCR,IAApC,EAA0CQ,SAA1C,IA5BUD,KA4BV;AAGEE,gBAAOC,CAAAA,eAAP,CAAuBN,KAAMO,CAAAA,KAAN,CAAYH,SAAZ,EAAuBA,SAAvB,GA/BfD,KA+Be,CAAvB,CAAA;AAHF;AAFF;AAQEE,cAAOC,CAAAA,eAAP,CAAuBN,KAAvB,CAAA;AARF;AADF;AAaA,WAAkB,UAAlB,KAAI,MAAOH,GAAX,GACSW,OAAQC,CAAAA,QAAR,CAAiB,QAAS,EAAG;AAClCZ,QAAA,CAAG,IAAH,EAASG,KAAT,CAAA;AADkC,KAA7B,CADT,GAMOA,KANP;AAnB8B;AAxBhC,MAAIQ,UAAUlB,OAAA,CAAQ,qCAAR,CAAd;AACA,cAAA;AAcA,MAAIW,SAASX,OAAA,CAAQ,uCAAR,CAAuBW,CAAAA,MAApC,EACII,SAAShB,MAAOgB,CAAAA,MAAhBA,IAA0BhB,MAAOqB,CAAAA,QADrC;AAIEnB,QAAOC,CAAAA,OAAP,GADEa,MAAJ,IAAcA,MAAOC,CAAAA,eAArB,GACmBX,WADnB,GAGmBF,UAFjB;AApBkG,CAApG;;",
"sources":["node_modules/randombytes/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$randombytes$browser\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","oldBrowser","Error","randomBytes","size","cb","MAX_UINT32","RangeError","bytes","Buffer","allocUnsafe","MAX_BYTES","generated","crypto","getRandomValues","slice","process","nextTick","msCrypto"]
}
