{
"version":3,
"file":"module$node_modules$parse_asn1$index.js",
"lineCount":64,
"mappings":"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",
"sources":["node_modules/parse-asn1/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$parse_asn1$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar asn1 = require('./asn1');\nvar aesid = require('./aesid.json');\nvar fixProc = require('./fixProc');\nvar ciphers = require('browserify-aes');\nvar compat = require('pbkdf2');\nvar Buffer = require('safe-buffer').Buffer;\n\nfunction decrypt(data, password) {\n\tvar salt = data.algorithm.decrypt.kde.kdeparams.salt;\n\tvar iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n\tvar algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')];\n\tvar iv = data.algorithm.decrypt.cipher.iv;\n\tvar cipherText = data.subjectPrivateKey;\n\tvar keylen = parseInt(algo.split('-')[1], 10) / 8;\n\tvar key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n\tvar cipher = ciphers.createDecipheriv(algo, key, iv);\n\tvar out = [];\n\tout.push(cipher.update(cipherText));\n\tout.push(cipher['final']());\n\treturn Buffer.concat(out);\n}\n\nfunction parseKeys(buffer) {\n\tvar password;\n\tif (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n\t\tpassword = buffer.passphrase;\n\t\tbuffer = buffer.key;\n\t}\n\tif (typeof buffer === 'string') {\n\t\tbuffer = Buffer.from(buffer);\n\t}\n\n\tvar stripped = fixProc(buffer, password);\n\n\tvar type = stripped.tag;\n\tvar data = stripped.data;\n\tvar subtype, ndata;\n\tswitch (type) {\n\t\tcase 'CERTIFICATE':\n\t\t\tndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n\t\t\t// falls through\n\t\tcase 'PUBLIC KEY':\n\t\t\tif (!ndata) {\n\t\t\t\tndata = asn1.PublicKey.decode(data, 'der');\n\t\t\t}\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\tndata.subjectPrivateKey = ndata.subjectPublicKey;\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'ec',\n\t\t\t\t\t\tdata: ndata\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tdata: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'ENCRYPTED PRIVATE KEY':\n\t\t\tdata = asn1.EncryptedPrivateKey.decode(data, 'der');\n\t\t\tdata = decrypt(data, password);\n\t\t\t// falls through\n\t\tcase 'PRIVATE KEY':\n\t\t\tndata = asn1.PrivateKey.decode(data, 'der');\n\t\t\tsubtype = ndata.algorithm.algorithm.join('.');\n\t\t\tswitch (subtype) {\n\t\t\t\tcase '1.2.840.113549.1.1.1':\n\t\t\t\t\treturn asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\tcase '1.2.840.10045.2.1':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcurve: ndata.algorithm.curve,\n\t\t\t\t\t\tprivateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n\t\t\t\t\t};\n\t\t\t\tcase '1.2.840.10040.4.1':\n\t\t\t\t\tndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der');\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: 'dsa',\n\t\t\t\t\t\tparams: ndata.algorithm.params\n\t\t\t\t\t};\n\t\t\t\tdefault: throw new Error('unknown key id ' + subtype);\n\t\t\t}\n\t\t\t// throw new Error('unknown key type ' + type)\n\t\tcase 'RSA PUBLIC KEY':\n\t\t\treturn asn1.RSAPublicKey.decode(data, 'der');\n\t\tcase 'RSA PRIVATE KEY':\n\t\t\treturn asn1.RSAPrivateKey.decode(data, 'der');\n\t\tcase 'DSA PRIVATE KEY':\n\t\t\treturn {\n\t\t\t\ttype: 'dsa',\n\t\t\t\tparams: asn1.DSAPrivateKey.decode(data, 'der')\n\t\t\t};\n\t\tcase 'EC PRIVATE KEY':\n\t\t\tdata = asn1.ECPrivateKey.decode(data, 'der');\n\t\t\treturn {\n\t\t\t\tcurve: data.parameters.value,\n\t\t\t\tprivateKey: data.privateKey\n\t\t\t};\n\t\tdefault: throw new Error('unknown key type ' + type);\n\t}\n}\nparseKeys.signature = asn1.signature;\n\nmodule.exports = parseKeys;\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseKeys","buffer","Buffer","isBuffer","password","passphrase","key","from","stripped","fixProc","type","tag","data","ndata","asn1","certificate","decode","tbsCertificate","subjectPublicKeyInfo","subtype","PublicKey","algorithm","join","RSAPublicKey","subjectPublicKey","subjectPrivateKey","params","pub_key","DSAparam","Error","EncryptedPrivateKey","salt","decrypt","kde","kdeparams","iters","parseInt","toString","algo","aesid","cipher","iv","cipherText","keylen","split","compat","pbkdf2Sync","ciphers","createDecipheriv","out","push","update","concat","PrivateKey","RSAPrivateKey","curve","privateKey","ECPrivateKey","priv_key","DSAPrivateKey","parameters","value","signature"]
}
