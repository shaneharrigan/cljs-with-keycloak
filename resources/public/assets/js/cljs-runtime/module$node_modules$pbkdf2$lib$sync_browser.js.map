{
"version":3,
"file":"module$node_modules$pbkdf2$lib$sync_browser.js",
"lineCount":58,
"mappings":"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",
"sources":["node_modules/pbkdf2/lib/sync-browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$pbkdf2$lib$sync_browser\"] = function(global,require,module,exports) {\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n\n};"],
"names":["shadow$provide","global","require","module","exports","Hmac","alg","key","saltLen","hash","getDigest","blocksize","length","Buffer","concat","ZEROS","ipad","allocUnsafe","sizes","opad","i","ipad1","copy","ipad2","size","rmd160Func","data","update","RIPEMD160","digest","md5","shaFunc","sha","checkParameters","defaultEncoding","toBuffer","alloc","sha1","sha224","sha256","sha384","sha512","rmd160","ripemd160","prototype","run","Hmac.prototype.run","h","pbkdf2","password","salt","iterations","keylen","hmac","DK","block1","destPos","hLen","l","Math","ceil","writeUInt32BE","T","U","j","k"]
}
