{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$short.js",
"lineCount":473,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/short.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$short\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","ShortCurve","conf","Base","call","a","toRed","BN","red","b","tinv","two","redInvm","zeroA","fromRed","cmpn","threeA","sub","p","endo","_getEndomorphism","_endoWnafT1","Array","_endoWnafT2","Point","curve","x","y","isRed","BasePoint","inf","forceRed","JPoint","z","one","zOne","utils","inherits","assert","prototype","ShortCurve.prototype._getEndomorphism","g","n","modn","beta","betas","_getEndoRoots","cmp","lambda","lambdas","mul","redMul","basis","map","vec","_getEndoBasis","ShortCurve.prototype._getEndoRoots","num","mont","ntinv","redNeg","s","redSqrt","l1","redAdd","l2","redSub","ShortCurve.prototype._getEndoBasis","aprxSqrt","ushrn","Math","floor","bitLength","v","clone","x1","y1","x2","y2","a0","b0","a1","b1","b2","prevR","i","r","u","q","div","neg","a2","len1","sqr","add","len2","negative","_endoSplit","ShortCurve.prototype._endoSplit","k","v1","v2","c1","divRound","c2","p1","p2","q1","q2","k1","k2","pointFromX","ShortCurve.prototype.pointFromX","odd","redSqr","redIAdd","zero","Error","isOdd","point","validate","ShortCurve.prototype.validate","ax","rhs","redISub","_endoWnafMulAdd","ShortCurve.prototype._endoWnafMulAdd","points","coeffs","jacobianResult","npoints","ncoeffs","length","split","_getBeta","ineg","res","_wnafMulAdd","j","ShortCurve.prototype.point","pointFromJSON","ShortCurve.prototype.pointFromJSON","obj","fromJSON","Point.prototype._getBeta","pre","precomputed","endoMul","naf","wnd","doubles","step","toJSON","Point.prototype.toJSON","slice","Point.fromJSON","obj2point","JSON","parse","concat","inspect","Point.prototype.inspect","isInfinity","toString","Point.prototype.isInfinity","Point.prototype.add","eq","dbl","c","nx","ny","Point.prototype.dbl","ys1","dyinv","getX","Point.prototype.getX","getY","Point.prototype.getY","Point.prototype.mul","_hasDoubles","_fixedNafMul","_wnafMul","mulAdd","Point.prototype.mulAdd","jmulAdd","Point.prototype.jmulAdd","Point.prototype.eq","Point.prototype.neg","_precompute","negate","toJ","Point.prototype.toJ","jpoint","ShortCurve.prototype.jpoint","toP","JPoint.prototype.toP","zinv","zinv2","ay","JPoint.prototype.neg","JPoint.prototype.add","pz2","z2","u1","u2","s1","s2","h","h2","h3","nz","mixedAdd","JPoint.prototype.mixedAdd","dblp","JPoint.prototype.dblp","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","JPoint.prototype.dbl","_zeroDbl","_threeDbl","_dbl","JPoint.prototype._zeroDbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","JPoint.prototype._threeDbl","delta","gamma","alpha","beta4","beta8","ggamma8","JPoint.prototype._dbl","jy2","jxd4","jyd8","trpl","JPoint.prototype.trpl","zz","mm","ee","yyu4","JPoint.prototype.mul","kbase","JPoint.prototype.eq","type","z3","pz3","eqXToP","JPoint.prototype.eqXToP","zs","rx","xc","redN","iadd","JPoint.prototype.inspect","JPoint.prototype.isInfinity"]
}
