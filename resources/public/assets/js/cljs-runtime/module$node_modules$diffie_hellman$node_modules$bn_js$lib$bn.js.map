{
"version":3,
"file":"module$node_modules$diffie_hellman$node_modules$bn_js$lib$bn.js",
"lineCount":2043,
"mappings":"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",
"sources":["node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$diffie_hellman$node_modules$bn_js$lib$bn\"] = function(global,require,module,exports) {\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n};"],
"names":["shadow$provide","global","require","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","negative","words","length","red","_init","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","i","smallMulTo","self","num","out","a","b","carry","k","ncarry","rword","maxJ","j","max","strip","FFTM","x","y","MPrime","name","p","n","bitLength","iushln","isub","tmp","_tmp","K256","call","P224","P192","P25519","Red","m","prime","_prime","gtn","Mont","shift","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","sub","wordSize","Buffer","window","e","BN.isBN","Array","isArray","BN.max","left","right","cmp","BN.min","BN.prototype._init","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","BN.prototype._initNumber","BN.prototype._initArray","ceil","off","w","BN.prototype._parseHex","BN.prototype._parseBase","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","BN.prototype.copy","dest","clone","BN.prototype.clone","_expand","BN.prototype._expand","size","BN.prototype.strip","_normSign","BN.prototype._normSign","inspect","BN.prototype.inspect","zeros","groupSizes","groupBases","BN.prototype.toString","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","BN.prototype.toNumber","ret","toJSON","BN.prototype.toJSON","toBuffer","BN.prototype.toBuffer","toArrayLike","BN.prototype.toArray","BN.prototype.toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","_countBits","clz32","BN.prototype._countBits","t","_zeroBits","BN.prototype._zeroBits","BN.prototype.bitLength","hi","zeroBits","BN.prototype.zeroBits","BN.prototype.byteLength","toTwos","BN.prototype.toTwos","width","abs","inotn","iaddn","fromTwos","BN.prototype.fromTwos","testn","notn","ineg","isNeg","BN.prototype.isNeg","neg","BN.prototype.neg","BN.prototype.ineg","iuor","BN.prototype.iuor","ior","BN.prototype.ior","or","BN.prototype.or","uor","BN.prototype.uor","iuand","BN.prototype.iuand","iand","BN.prototype.iand","and","BN.prototype.and","uand","BN.prototype.uand","iuxor","BN.prototype.iuxor","ixor","BN.prototype.ixor","xor","BN.prototype.xor","uxor","BN.prototype.uxor","BN.prototype.inotn","bytesNeeded","bitsLeft","BN.prototype.notn","setn","BN.prototype.setn","bit","wbit","iadd","BN.prototype.iadd","add","BN.prototype.add","BN.prototype.isub","BN.prototype.sub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","lo","imul","mid","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","BN.prototype.mulTo","hncarry","mulp","fftm","makeRBT","FFTM.prototype.makeRBT","N","l","revBin","FFTM.prototype.revBin","rb","permute","FFTM.prototype.permute","rbt","rws","iws","rtws","itws","transform","FFTM.prototype.transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","FFTM.prototype.guessLen13b","odd","conjugate","FFTM.prototype.conjugate","normalize13b","FFTM.prototype.normalize13b","ws","round","convert13b","FFTM.prototype.convert13b","stub","FFTM.prototype.stub","ph","FFTM.prototype.mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","BN.prototype.mul","mulf","BN.prototype.mulf","BN.prototype.imul","BN.prototype.imuln","muln","BN.prototype.muln","BN.prototype.sqr","isqr","BN.prototype.isqr","BN.prototype.pow","BN.prototype.iushln","bits","carryMask","newCarry","ishln","BN.prototype.ishln","BN.prototype.iushrn","hint","extended","mask","h","ishrn","BN.prototype.ishrn","shln","BN.prototype.shln","ushln","BN.prototype.ushln","shrn","BN.prototype.shrn","ushrn","BN.prototype.ushrn","BN.prototype.testn","imaskn","BN.prototype.imaskn","maskn","BN.prototype.maskn","BN.prototype.iaddn","BN.prototype._iaddn","BN.prototype.isubn","addn","BN.prototype.addn","subn","BN.prototype.subn","iabs","BN.prototype.iabs","BN.prototype.abs","_ishlnsubmul","BN.prototype._ishlnsubmul","_wordDiv","BN.prototype._wordDiv","mode","bhi","bhiBits","diff","qj","divmod","BN.prototype.divmod","positive","divn","BN.prototype.div","BN.prototype.mod","BN.prototype.umod","divRound","BN.prototype.divRound","dm","half","BN.prototype.modn","acc","BN.prototype.idivn","BN.prototype.divn","egcd","BN.prototype.egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","BN.prototype._invmp","x1","x2","delta","cmpn","BN.prototype.gcd","invm","BN.prototype.invm","BN.prototype.isEven","BN.prototype.isOdd","BN.prototype.andln","bincn","BN.prototype.bincn","BN.prototype.isZero","BN.prototype.cmpn","BN.prototype.cmp","ucmp","BN.prototype.ucmp","BN.prototype.gtn","gt","BN.prototype.gt","gten","BN.prototype.gten","gte","BN.prototype.gte","ltn","BN.prototype.ltn","lt","BN.prototype.lt","lten","BN.prototype.lten","lte","BN.prototype.lte","eqn","BN.prototype.eqn","eq","BN.prototype.eq","BN.red","toRed","BN.prototype.toRed","ctx","convertTo","_forceRed","fromRed","BN.prototype.fromRed","convertFrom","BN.prototype._forceRed","forceRed","BN.prototype.forceRed","redAdd","BN.prototype.redAdd","redIAdd","BN.prototype.redIAdd","redSub","BN.prototype.redSub","redISub","BN.prototype.redISub","redShl","BN.prototype.redShl","shl","redMul","BN.prototype.redMul","_verify2","redIMul","BN.prototype.redIMul","redSqr","BN.prototype.redSqr","_verify1","redISqr","BN.prototype.redISqr","redSqrt","BN.prototype.redSqrt","sqrt","redInvm","BN.prototype.redInvm","redNeg","BN.prototype.redNeg","redPow","BN.prototype.redPow","primes","k256","p224","p192","p25519","MPrime.prototype._tmp","ireduce","MPrime.prototype.ireduce","split","imulK","rlen","undefined","_strip","MPrime.prototype.split","input","MPrime.prototype.imulK","K256.prototype.split","output","outLen","prev","next","K256.prototype.imulK","P25519.prototype.imulK","BN._prime","Red.prototype._verify1","Red.prototype._verify2","Red.prototype.imod","Red.prototype.neg","Red.prototype.add","Red.prototype.iadd","Red.prototype.sub","Red.prototype.isub","Red.prototype.shl","Red.prototype.imul","Red.prototype.mul","Red.prototype.isqr","Red.prototype.sqr","Red.prototype.sqrt","mod3","one","nOne","lpow","z","Red.prototype.invm","inv","Red.prototype.pow","wnd","current","currentLen","windowSize","Red.prototype.convertTo","Red.prototype.convertFrom","mont","BN.mont","Mont.prototype.convertTo","Mont.prototype.convertFrom","Mont.prototype.imul","u","Mont.prototype.mul","Mont.prototype.invm"]
}
