{
"version":3,
"file":"module$node_modules$browserify_aes$decrypter.js",
"lineCount":93,
"mappings":"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",
"sources":["node_modules/browserify-aes/decrypter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$browserify_aes$decrypter\"] = function(global,require,module,exports) {\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n\n};"],
"names":["shadow$provide","global","require","module","exports","Decipher","mode","key","iv","Transform","call","_cache","Splitter","_last","_cipher","aes","AES","_prev","Buffer","from","_mode","_autopadding","cache","allocUnsafe","createDecipheriv","suite","password","config","MODES","toLowerCase","TypeError","length","type","StreamCipher","AuthCipher","ebtk","inherits","prototype","_update","Decipher.prototype._update","data","add","chunk","out","get","thing","decrypt","push","concat","_final","Decipher.prototype._final","flush","padded","last","Error","i","slice","setAutoPadding","Decipher.prototype.setAutoPadding","setTo","Splitter.prototype.add","Splitter.prototype.get","autoPadding","Splitter.prototype.flush","createDecipher","keys"]
}
